{"ast":null,"code":"var _jsxFileName = \"/Users/knighty/knightyapp/src/contexts/LanguageContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LanguageContext = /*#__PURE__*/createContext();\nexport const useLanguage = () => {\n  _s();\n  const context = useContext(LanguageContext);\n  if (!context) {\n    throw new Error('useLanguage must be used within a LanguageProvider');\n  }\n  return context;\n};\n_s(useLanguage, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const LanguageProvider = ({\n  children\n}) => {\n  _s2();\n  const [language, setLanguage] = useState('en');\n  useEffect(() => {\n    // Load saved language from localStorage\n    const savedLanguage = localStorage.getItem('knighty-language');\n    if (savedLanguage && (savedLanguage === 'en' || savedLanguage === 'ar')) {\n      setLanguage(savedLanguage);\n    }\n  }, []);\n  const toggleLanguage = () => {\n    const newLanguage = language === 'en' ? 'ar' : 'en';\n    setLanguage(newLanguage);\n    localStorage.setItem('knighty-language', newLanguage);\n  };\n  const setLanguageMode = lang => {\n    if (lang === 'en' || lang === 'ar') {\n      setLanguage(lang);\n      localStorage.setItem('knighty-language', lang);\n    }\n  };\n  const value = {\n    language,\n    isArabic: language === 'ar',\n    isEnglish: language === 'en',\n    toggleLanguage,\n    setLanguageMode\n  };\n  return /*#__PURE__*/_jsxDEV(LanguageContext.Provider, {\n    value: value,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `app-container ${language === 'ar' ? 'rtl' : 'ltr'}`,\n      dir: language === 'ar' ? 'rtl' : 'ltr',\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_s2(LanguageProvider, \"W8orfgzKvvs5hVi8Wxnq8KXupyo=\");\n_c = LanguageProvider;\nvar _c;\n$RefreshReg$(_c, \"LanguageProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","jsxDEV","_jsxDEV","LanguageContext","useLanguage","_s","context","Error","LanguageProvider","children","_s2","language","setLanguage","savedLanguage","localStorage","getItem","toggleLanguage","newLanguage","setItem","setLanguageMode","lang","value","isArabic","isEnglish","Provider","className","dir","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/knighty/knightyapp/src/contexts/LanguageContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\n\nconst LanguageContext = createContext();\n\nexport const useLanguage = () => {\n  const context = useContext(LanguageContext);\n  if (!context) {\n    throw new Error('useLanguage must be used within a LanguageProvider');\n  }\n  return context;\n};\n\nexport const LanguageProvider = ({ children }) => {\n  const [language, setLanguage] = useState('en');\n\n  useEffect(() => {\n    // Load saved language from localStorage\n    const savedLanguage = localStorage.getItem('knighty-language');\n    if (savedLanguage && (savedLanguage === 'en' || savedLanguage === 'ar')) {\n      setLanguage(savedLanguage);\n    }\n  }, []);\n\n  const toggleLanguage = () => {\n    const newLanguage = language === 'en' ? 'ar' : 'en';\n    setLanguage(newLanguage);\n    localStorage.setItem('knighty-language', newLanguage);\n  };\n\n  const setLanguageMode = (lang) => {\n    if (lang === 'en' || lang === 'ar') {\n      setLanguage(lang);\n      localStorage.setItem('knighty-language', lang);\n    }\n  };\n\n  const value = {\n    language,\n    isArabic: language === 'ar',\n    isEnglish: language === 'en',\n    toggleLanguage,\n    setLanguageMode\n  };\n\n  return (\n    <LanguageContext.Provider value={value}>\n      <div className={`app-container ${language === 'ar' ? 'rtl' : 'ltr'}`} dir={language === 'ar' ? 'rtl' : 'ltr'}>\n        {children}\n      </div>\n    </LanguageContext.Provider>\n  );\n};\n\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9E,MAAMC,eAAe,gBAAGN,aAAa,CAAC,CAAC;AAEvC,OAAO,MAAMO,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC/B,MAAMC,OAAO,GAAGR,UAAU,CAACK,eAAe,CAAC;EAC3C,IAAI,CAACG,OAAO,EAAE;IACZ,MAAM,IAAIC,KAAK,CAAC,oDAAoD,CAAC;EACvE;EACA,OAAOD,OAAO;AAChB,CAAC;AAACD,EAAA,CANWD,WAAW;AAQxB,OAAO,MAAMI,gBAAgB,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EAChD,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAE9CC,SAAS,CAAC,MAAM;IACd;IACA,MAAMa,aAAa,GAAGC,YAAY,CAACC,OAAO,CAAC,kBAAkB,CAAC;IAC9D,IAAIF,aAAa,KAAKA,aAAa,KAAK,IAAI,IAAIA,aAAa,KAAK,IAAI,CAAC,EAAE;MACvED,WAAW,CAACC,aAAa,CAAC;IAC5B;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMG,cAAc,GAAGA,CAAA,KAAM;IAC3B,MAAMC,WAAW,GAAGN,QAAQ,KAAK,IAAI,GAAG,IAAI,GAAG,IAAI;IACnDC,WAAW,CAACK,WAAW,CAAC;IACxBH,YAAY,CAACI,OAAO,CAAC,kBAAkB,EAAED,WAAW,CAAC;EACvD,CAAC;EAED,MAAME,eAAe,GAAIC,IAAI,IAAK;IAChC,IAAIA,IAAI,KAAK,IAAI,IAAIA,IAAI,KAAK,IAAI,EAAE;MAClCR,WAAW,CAACQ,IAAI,CAAC;MACjBN,YAAY,CAACI,OAAO,CAAC,kBAAkB,EAAEE,IAAI,CAAC;IAChD;EACF,CAAC;EAED,MAAMC,KAAK,GAAG;IACZV,QAAQ;IACRW,QAAQ,EAAEX,QAAQ,KAAK,IAAI;IAC3BY,SAAS,EAAEZ,QAAQ,KAAK,IAAI;IAC5BK,cAAc;IACdG;EACF,CAAC;EAED,oBACEjB,OAAA,CAACC,eAAe,CAACqB,QAAQ;IAACH,KAAK,EAAEA,KAAM;IAAAZ,QAAA,eACrCP,OAAA;MAAKuB,SAAS,EAAE,iBAAiBd,QAAQ,KAAK,IAAI,GAAG,KAAK,GAAG,KAAK,EAAG;MAACe,GAAG,EAAEf,QAAQ,KAAK,IAAI,GAAG,KAAK,GAAG,KAAM;MAAAF,QAAA,EAC1GA;IAAQ;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACkB,CAAC;AAE/B,CAAC;AAACpB,GAAA,CAvCWF,gBAAgB;AAAAuB,EAAA,GAAhBvB,gBAAgB;AAAA,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}